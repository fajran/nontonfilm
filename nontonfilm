#!/usr/bin/env python

import sys
import gtk
import gtk.glade
import pygst
pygst.require("0.10")
import gst
import os
import time
import thread

#
# Antar muka
#

def keluar(w):
	player.set_state(gst.STATE_NULL)
	gtk.main_quit()

def atur_posisi():
	global durasi, slider_waktu

	while True:
		while not durasi:
			try:
				time.sleep(0.2)
				durasi = player.query_duration(time_format, None)[0]
				break
			except:
				pass
	
		slider_waktu.set_range(0, durasi / 1000000)

		while durasi:
			time.sleep(1.0)

			posisi = player.query_position(time_format, None)[0]
			slider_waktu.set_value(posisi / 1000000)



def start_stop(w=None):
	global mulai, durasi

	if mulai:
		player.set_state(gst.STATE_PAUSED)
		img_putar.set_from_stock(gtk.STOCK_MEDIA_PLAY, gtk.ICON_SIZE_BUTTON)

	else:
		player.set_state(gst.STATE_PLAYING)
		img_putar.set_from_stock(gtk.STOCK_MEDIA_PAUSE, gtk.ICON_SIZE_BUTTON)

	mulai = not mulai

def ubah_posisi(w, scroll, value):
	posisi = slider_waktu.get_value() * 1000000
	player.seek_simple(time_format, gst.SEEK_FLAG_FLUSH, posisi)

def pilih_film(w):
	global file_film

	fc = gtk.FileChooserDialog("Pilih Film", buttons=(gtk.STOCK_CANCEL,gtk.RESPONSE_CANCEL,gtk.STOCK_OPEN,gtk.RESPONSE_OK))
	if file_film:
		print file_film
		dir = os.path.dirname(file_film)
		fc.set_current_folder(dir)

	res = fc.run()

	if res == gtk.RESPONSE_OK:
		putar(fc.get_filename())

	fc.destroy()


glade = gtk.glade.XML("nontonfilm.glade")

window = glade.get_widget("window")
box_video = glade.get_widget("box_video")
btn_putar = glade.get_widget("btn_putar")
btn_pilih_film = glade.get_widget("btn_pilih_film")
slider_waktu = glade.get_widget("slider_waktu")
img_putar = glade.get_widget("img_putar")

layar = gtk.DrawingArea()
box_video.add(layar)

btn_putar.connect("clicked", start_stop)
window.connect("destroy", keluar)
slider_waktu.connect("change-value", ubah_posisi)
btn_pilih_film.connect("clicked", pilih_film)

window.show_all()

mulai = False
durasi = None
file_film = None

#
# Gstreamer
#

def on_message(bus, message):
	t = message.type
	if t == gst.MESSAGE_EOS:
		player.set_state(gst.STATE_NULL)
	elif t == gst.MESSAGE_ERROR:
		player.set_state(gst.STATE_NULL)

def on_sync_message(bus, message):
	if message.structure is None:
		return
	message_name = message.structure.get_name()
	if message_name == "prepare-xwindow-id":
		imagesink = message.src
		imagesink.set_property("force-aspect-ratio", True)
		imagesink.set_xwindow_id(layar.window.xid)
			
player = gst.element_factory_make("playbin", "player")
bus = player.get_bus()
bus.add_signal_watch()
bus.enable_sync_message_emission()
bus.connect("message", on_message)
bus.connect("sync-message::element", on_sync_message)

time_format = gst.Format(gst.FORMAT_TIME)

#
# Pemutaran film
#

atur_posisi_id = None

def putar(file):
	global mulai, durasi, file_film, atur_posisi_id

	file_film = file
	player.set_property("uri", "file://%s" % os.path.abspath(file))

	mulai = False
	durasi = None
	player.set_state(gst.STATE_NULL)

	if not atur_posisi_id:
		atur_posisi_id = thread.start_new_thread(atur_posisi, ())

	start_stop()


#
# Mulai
#

if len(sys.argv) > 1:
	putar(sys.argv[1])

gtk.gdk.threads_init()
gtk.main()

